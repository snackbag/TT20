plugins {
	id 'fabric-loom' version '1.11-SNAPSHOT'
	id 'maven-publish'
	id "dev.kikugie.j52j" version "1.0"
}

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://artifacts.snackbag.net/artifactory/shitlib" } // ShitLib
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
}

loom {
	runConfigs.all {
		ideConfigGenerated = true
		runDir = "../../run"
		accessWidenerPath = file("../../src/main/resources/tt20.accesswidener")
	}
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${property('deps.minecraft')}"
	mappings "net.fabricmc:yarn:${property('deps.yarn_mappings')}:v2"
	modImplementation "net.fabricmc:fabric-loader:${property('deps.fabric_loader')}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${property('deps.fabric_api')}"

	// ShitLib
	implementation "net.snackbag.shit:shit:${project.shitlib_version}"
	include "net.snackbag.shit:shit:${project.shitlib_version}"

    // ModMenu
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
}

processResources {
	inputs.property "version", project.version
	inputs.property "minecraft", stonecutter.current.version

	def map = ["version": project.version, "minecraft": stonecutter.current.version]

	filesMatching("fabric.mod.json") {
		expand map
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	if (stonecutter.compare(stonecutter.current.version, "1.20.5") >= 0) {
		sourceCompatibility = JavaVersion.VERSION_21
		targetCompatibility = JavaVersion.VERSION_21
	} else if (stonecutter.compare(stonecutter.current.version, "1.21") >= 0) {
		sourceCompatibility = JavaVersion.VERSION_21
		targetCompatibility = JavaVersion.VERSION_21
	} else {
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	}
}

jar {
    inputs.property "archivesName", "tt20-${project.version}+mc${stonecutter.current.version}"

	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}